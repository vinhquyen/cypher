/**
 * @copyright Â©Melqui Brito. All rights reserved.
 * @author Melqui Brito
 * @version 1.0.0 (2020-04-08)
 * @descreption Clean, fast and efficient methods for encryption and decryption of text data based on synchronous cryptography. Encryption and decryption is done by the use of symmetric keys.
 */

String.prototype.encrypt=function(t){let e="string"==typeof t?t:"object"==typeof t?JSON.stringify(t):t.toString();if(e&&e.length&&this.length){let t=encodeURIComponent(e).split(""),n=encodeURIComponent(this).split(""),o=function(t){let e=t<0?127+t:t>93?t-93+32:33+t;return String.fromCharCode(e)},r=0,x=0,h=!1,l=!1,i=t.length>n.length;for(;!h||!l;)n[x]=o(t[r].charCodeAt(0)-n[x].charCodeAt(0)),x++,++r===t.length&&(r=0,h=!0),x===n.length&&(x=0,l=!0);let g=i?x-1:r-1,c=n.length>127?126:n.length-1,d=Math.round(Math.random()*c);g<0&&(g=i?n.length:t.length,g--);let a=String.fromCharCode(g+33),f=String.fromCharCode(126-d),C=n.join("");return f+(C=C.slice(0,d)+a+C.slice(d))}},String.prototype.decrypt=function(t){let e="string"==typeof t?t:"object"==typeof t?JSON.stringify(t):t.toString();if(e&&e.length&&this.length){let t=[],n=encodeURIComponent(e).split(""),o=126-this.charCodeAt(0),r=this.slice(1),x=r[o].charCodeAt(0)-33;r=r.slice(0,o)+r.slice(o+1),t=r.split("");let h=n.length-1,l=t.length-1,i=n.length>t.length,g=i?n.length:t.length;i?l=x:h=x;let c=function(){h<0&&(h=n.length-1),-1===l&&(l=t.length-1)},d=function(){l<0&&(l=t.length-1),-1===h&&(h=n.length-1)},a=i?c:d;for(let e=0;e<g;e++){let e=n[h].charCodeAt(0)-(t[l].charCodeAt(0)-33);e<33&&(e=n[h].charCodeAt(0)-(t[l].charCodeAt(0)-127)),t[l]=String.fromCharCode(e),h--,l--,a()}try{return decodeURIComponent(t.join(""))}catch(e){return t.join("")}}},String.getSymmetricKey=function(){return"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[x]/g,function(){let t=Math.round(93*Math.random())+33;for(;34===t||39===t||92===t;)t=Math.round(93*Math.random())+33;return String.fromCharCode(t)})};
