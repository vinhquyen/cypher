/**
 * @copyright Â©Melqui Brito. All rights reserved.
 * @author Melqui Brito
 * @version 1.0.0 (2020-04-08)
 * @descreption Clean, fast and efficient methods for encryption and decryption of text data based on synchronous cryptography. Encryption and decryption is done by the use of symmetric keys.
 */

String.prototype.encrypt=function(t){let e=t?t.toString():void 0;if(e&&e.length&&this.length){let t=encodeURIComponent(e).split(""),n=encodeURIComponent(this).split(""),r=function(t){let e=t<0?127+t:t>93?t-93+32:33+t;return String.fromCharCode(e)},o=0,l=0,h=!1,i=!1,x=t.length>n.length;for(;!h||!i;)n[l]=r(t[o].charCodeAt(0)-n[l].charCodeAt(0)),l++,++o===t.length&&(o=0,h=!0),l===n.length&&(l=0,i=!0);let c=x?l-1:o-1,d=n.length>127?126:n.length-1,g=Math.round(Math.random()*d);c<0&&(c=x?n.length:t.length,c--);let a=String.fromCharCode(c+33),p=String.fromCharCode(126-g),u=n.join("");return p+(u=u.slice(0,g)+a+u.slice(g))}return null},String.prototype.decrypt=function(t){let e=t?t.toString():void 0;if(e&&e.length&&this.length){let t=[],n=encodeURIComponent(e).split(""),r=126-this.charCodeAt(0),o=this.slice(1),l=o[r].charCodeAt(0)-33;o=o.slice(0,r)+o.slice(r+1),t=o.split("");let h=n.length-1,i=t.length-1,x=n.length>t.length,c=x?n.length:t.length;x?i=l:h=l;let d=function(){h<0&&(h=n.length-1),-1===i&&(i=t.length-1)},g=function(){i<0&&(i=t.length-1),-1===h&&(h=n.length-1)},a=x?d:g;for(let e=0;e<c;e++){let e=n[h].charCodeAt(0)-(t[i].charCodeAt(0)-33);e<33&&(e=n[h].charCodeAt(0)-(t[i].charCodeAt(0)-127)),t[i]=String.fromCharCode(e),h--,i--,a()}try{return decodeURIComponent(t.join(""))}catch(e){return t.join("")}}return null},String.getSymmetricKey=function(){return"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[x]/g,function(){let t=Math.round(93*Math.random())+33;for(;34===t||39===t||92===t;)t=Math.round(93*Math.random())+33;return String.fromCharCode(t)})},Object.prototype.encrypt=function(t){let e=JSON.stringify(this).encrypt(t);return e?{"encrypted-data":e}:null},Object.prototype.decrypt=function(t){if(this.hasOwnProperty("encrypted-data")&&"string"==typeof this["encrypted-data"])try{return JSON.parse(this["encrypted-data"].decrypt(t))}catch(t){return null}return null};
